---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/categories/{category_id}/hotels":
    parameters:
    - name: category_id
      in: path
      description: category_id
      required: true
      schema:
        type: integer
    get:
      summary: list all hotels under a category
      tags:
      - Categories
      responses:
        '200':
          description: successful
  "/api/v1/categories":
    get:
      summary: list all categories
      tags:
      - Categories
      responses:
        '200':
          description: successful
    post:
      summary: Creates a category
      tags:
      - Categories
      parameters: []
      responses:
        '201':
          description: category created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                rating:
                  type: integer
              required:
              - name
              - description
  "/api/v1/categories/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    get:
      summary: show category details
      tags:
      - Categories
      responses:
        '200':
          description: category not found
    patch:
      summary: update category
      tags:
      - Categories
      parameters: []
      responses:
        '200':
          description: category name updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                rating:
                  type: integer
                  default: 'null'
                  comment: When added, ranges strictly from 1 to 5 inclusive.
              required:
              - name
              - description
    put:
      summary: update category
      tags:
      - Categories
      parameters: []
      responses:
        '200':
          description: success!
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                rating:
                  type: integer
              required:
              - name
              - description
    delete:
      summary: delete category
      tags:
      - Categories
      responses:
        '204':
          description: successful
  "/api/v1/hotels":
    get:
      summary: list hotels
      tags:
      - Hotels List
      responses:
        '200':
          description: successful
    post:
      summary: create hotel
      tags:
      - Create Hotel
      parameters: []
      responses:
        '201':
          description: Hotel created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                country:
                  type: string
                city:
                  type: string
                address:
                  type: string
                image_url:
                  type: string
              required:
              - name
              - description
              - price
              - country
              - city
              - address
              - image_url
              - category_id
  "/api/v1/hotels/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show Hotel
      tags:
      - Show Hotel
      responses:
        '200':
          description: Hotel not found
    patch:
      summary: update Hotel
      tags:
      - Update Hotel
      parameters: []
      responses:
        '200':
          description: Hotel updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                country:
                  type: string
                city:
                  type: string
                address:
                  type: string
                image_url:
                  type: string
              required:
              - name
              - description
              - price
              - country
              - city
              - address
              - image_url
              - category_id
    put:
      summary: update hotel
      tags:
      - Update Hotel
      parameters: []
      responses:
        '200':
          description: Hotel updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                country:
                  type: string
                city:
                  type: string
                address:
                  type: string
                image_url:
                  type: string
              required:
              - name
              - description
              - price
              - country
              - city
              - address
              - image_url
              - category_id
    delete:
      summary: delete Hotel
      tags:
      - Delete Hotel
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                country:
                  type: string
                city:
                  type: string
                address:
                  type: string
                image_url:
                  type: string
              required:
              - name
              - description
              - price
              - country
              - city
              - address
              - image_url
              - category_id
  "/api/v1/hotels/{hotel_id}/reservations":
    parameters:
    - name: hotel_id
      in: path
      description: hotel_id
      required: true
      schema:
        type: string
    get:
      summary: list reservations
      responses:
        '200':
          description: successful
    post:
      summary: create reservation
      responses:
        '200':
          description: successful
  "/api/v1/hotels/{hotel_id}/reservations/{id}":
    parameters:
    - name: hotel_id
      in: path
      description: hotel_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show reservation
      responses:
        '200':
          description: successful
    patch:
      summary: update reservation
      responses:
        '200':
          description: successful
    put:
      summary: update reservation
      responses:
        '200':
          description: successful
    delete:
      summary: delete reservation
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
